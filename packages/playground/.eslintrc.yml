root: true
extends:
  - plugin:vue/vue3-recommended
parser: vue-eslint-parser
parserOptions:
  parser: '@typescript-eslint/parser'
  sourceType: module
rules:
  vue/html-closing-bracket-newline:
    - error
    - singleline: never
      multiline: never
  # ===== Vue uncategorized rules - https://eslint.vuejs.org/rules/#uncategorized
  vue/block-lang: # Only '<script>' blocks with 'lang="ts"' are allowed
    - error
    - script:
        lang: ts
  vue/block-order: # Blocks must be ordered
    - error
    - order:
      - template
      - script
      - i18n
      - style
  vue/block-tag-newline: # Blocks like '<script>' must enclose content with one line break
    - error
    - multiline: always
  vue/component-api-style: # Enforce composition API using '<script setup>'
    - error
    - [script-setup]
  vue/component-name-in-template-casing: # Encorce kebab-case when referencing components in '<template>'
    - error
    - kebab-case
    - registeredComponentsOnly: false
  vue/custom-event-name-casing: # Encore camelCase for events name
    - error
    - camelCase
  vue/define-emits-declaration: # Enforce using defineEmits with type
    - error
    - type-based
  vue/define-macros-order: # Enforce order of macros
    - error
    - order:
      - defineProps
      - defineEmits
      - defineSlots
  vue/define-props-declaration: # Enforce using defineProps with type
    - error
    - type-based
  vue/html-button-has-type: error # Enforce using <button> with an explicit 'type' attribute
  vue/next-tick-style: error  # Enforce using promise with nextTick
  vue/no-bare-strings-in-template: warn # Enforce translations in '<template>'
  vue/no-boolean-default: error # Disallow boolean properties with a default value to 'true'
  vue/no-duplicate-attr-inheritance: error # Encore inheritAttrs instead of 'v-bind="$attrs"'
  vue/no-empty-component-block: error # Disallow empty blocks
  vue/no-multiple-objects-in-class: error # Disallow multiple objects to "class" HTML property
  vue/no-ref-object-reactivity-loss: error # Disallow usages of ref objects that can lead to loss of reactivity
  vue/no-required-prop-with-default: error # Enforce props with default values to be optional
  vue/no-setup-props-reactivity-loss: error #Disallow usages that lose the reactivity of props passed to setup
  vue/no-static-inline-styles: error # Enforce using '<style>' block instead of inline 'style' attributes
  vue/no-template-target-blank: error # Enforce using 'rel="noopener noreferrer' when using 'target="_blank"'
  vue/no-undef-components: # Disallow use of undefined components in '<template>'
    - error
    - ignorePatterns:
      - 'v-(-|\w)+' # Vuetify components
  vue/no-unused-properties: error #Disallow unused properties
  vue/no-unused-refs: error # Disallow unused refs
  vue/no-useless-mustaches: error # Disallow unnecessary mustache interpolations
  vue/no-useless-v-bind: error # Disallow unnecessary v-bind directives
  vue/no-v-text: error # Disallow use of v-text
  vue/padding-line-between-blocks: error # Enforce use of padding lines between blocks
  vue/prefer-separate-static-class: error # Enforce static class names in template to be a separate 'class' attribute
  vue/prefer-true-attribute-shorthand: error # Enforce shorthand form attribute when v-bind value is true
  vue/require-macro-variable-name: error # Enforce use of standard macro variable name, as for defineProps and defineEmits
  vue/require-prop-comment: warn # Enforce use of JSDoc comments on properties
  vue/require-typed-object-prop: error # Enforce adding type declaration to object props
  vue/require-typed-ref: error # Enforce ref and shallowRef functions to be strongly typed
  vue/script-indent: error # Enforce consistent indentation in '<script>'
  vue/v-for-delimiter-style: error #Enforce v-for directive's delimiter style, using 'a in b'
  # ===== Vue extension rules - https://eslint.vuejs.org/rules/#extension-rules
  vue/dot-notation: error
  vue/eqeqeq: error
  vue/no-console: error
  vue/no-constant-condition: error
  vue/no-extra-parens: error
  vue/no-irregular-whitespace: error
  vue/no-loss-of-precision: error
  vue/no-restricted-syntax: error
  vue/no-sparse-arrays: error
  vue/no-useless-concat: error
  vue/prefer-template: error
  vue/space-in-parens: error
  vue/space-infix-ops: error
  # ===== ESLint rules - https://eslint.org/docs/latest/rules/
  no-duplicate-imports: error
  no-import-assign: error
  no-useless-rename: error
